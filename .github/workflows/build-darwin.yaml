name: "darwin tests for 'kiara'"
# This workflow is triggered on pushes to the repository.
on: [push]
env:
  DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer
  MACOSX_DEPLOYMENT_TARGET: 10.15


jobs:
  test-darwin:
    name: pytest on darwin
    runs-on: macos-14
    strategy:
      matrix:
        python_version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: create lockfile
        run: uv lock --python ${{ matrix.python_version }}
      - name: add core_types plugin
        run: uv add git+https://github.com/DHARPA-project/kiara_plugin.core_types@develop
      - name: add tabular plugin
        run: uv add git+https://github.com/DHARPA-project/kiara_plugin.tabular@develop
      - name: install the project
        run: uv sync --locked --dev --python ${{ matrix.python_version }}
      - name: display installed kiara and module package versions
        run: uv pip list | grep kiara
      - name: Test with pytest
        run: make test

#  test-darwin-arm:
#    name: pytest on darwin (ARM)
#    runs-on: macos-14-arm64
#    strategy:
#      matrix:
#        python_version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
#    steps:
#      - name: "Set up Python ${{ matrix.python_version }}"
#        uses: actions/setup-python@v5
#        with:
#          python-version: "${{ matrix.python_version }}"
#      - name: pip cache
#        id: pip-cache
#        uses: actions/cache@v4
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.*') }}-arm
#      - uses: actions/checkout@v4
#      - name: install core_types plugin
#        run: pip install -U git+https://github.com/DHARPA-project/kiara_plugin.core_types@develop
#      - name: install tabular types plugin
#        run: pip install -U git+https://github.com/DHARPA-project/kiara_plugin.tabular@develop
#      - name: install kiara
#        run: pip install -U .[dev_testing]
#      - name: display installed kiara and module package versions
#        run: pip list | grep kiara
#      - name: test with pytest
#        run: make test
