name: "linux tests and documentation build for 'kiara'"
# This workflow is triggered on pushes to the repository.
on: [push]

jobs:

  commitlint:
    name: lint commit message
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4

  test-linux:
    name: pytest on linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: "Set up Python ${{ matrix.python_version }}"
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python_version }}"
      - name: pip cache
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python_version }}
      - uses: actions/checkout@v4
      - name: install core_types plugin
        run: pip install -U git+https://github.com/DHARPA-project/kiara_plugin.core_types@develop
      - name: install tabular plugin
        run: pip install -U git+https://github.com/DHARPA-project/kiara_plugin.tabular@develop
      - name: install kiara
        run: pip install -U  .[dev_testing]
      - name: display installed kiara and module package versions
        run: pip list | grep kiara
      - name: test with pytest
        run: pytest --cov-report=xml --cov=kiara tests
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          parallel: true
          flag-name: run ${{ join(matrix.*, ' - ') }}
          format: cobertura
          file: coverage.xml

  coverage:
    name: test coverage
    runs-on: ubuntu-latest
    needs:
      - test-linux
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true

  mypy-linux:
    name: mypy check on linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: "Set up Python ${{ matrix.python_version }}"
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python_version }}"
      - name: pip cache
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python_version }}
      - uses: actions/checkout@v4
      - name: install kiara
        run: pip install -U  .[dev_testing]
      - name: Test with mypy
        run: make mypy

  linting-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: lint sourcecode
        uses: chartboost/ruff-action@v1

#  build-docs:
#    name: build documentation
#    runs-on: ubuntu-latest
#    needs:
#      - test-linux
#      - mypy-linux
#      - linting-linux
#    steps:
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v4
#        with:
#          python-version: "3.10"
#      - name: pip cache
#        id: pip-cache
#        uses: actions/cache@v3
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.*') }}
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: install kiara
#        run: pip install -U .[dev_documentation,doc]
#      - run: git config --global user.email "markus@frkl.io"
#      - run: git config --global user.name "Markus Binsteiner"
#      - name: create latest documentation
#        if: ${{ ( github.ref == 'refs/heads/develop') }}
#        run: FAIL_DOC_BUILD_ON_ERROR=true mike deploy --push latest && mike set-default --push latest
#      - name: extract tag name
#        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
#      - name: create stable documentation
#        if: ${{ startsWith(github.ref, 'refs/tags/') }}
#        run: FAIL_DOC_BUILD_ON_ERROR=true mike deploy --push --update-alias --title "v ${RELEASE_VERSION}" "${RELEASE_VERSION}" stable

  build_python_package:
    name: build python package
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: pip cache
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: install pip
        run: pip install -U pip setuptools setuptools_scm build wheel
      - name: create packages
        run: python -m build
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-dists
          path: dist/

  publish_python_package:
    name: publish python package
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs:
      - test-linux
      - mypy-linux
      - linting-linux
      - build_conda_package
      - build_python_package
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Retrieve build distributions
        uses: actions/download-artifact@v4
        with:
          name: build-dists
          path: dist/
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  build_conda_package:
    name: conda package build
    runs-on: ubuntu-latest
    steps:
      - name: "Set up Python 3.12"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: pip cache
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: install kiara_plugin.develop
        run: pip install -U git+https://github.com/DHARPA-project/kiara_plugin.develop@develop
      - name: build conda package
        run: kiara build conda pkg --channel dharpa --channel conda-forge --patch-data ci/conda/conda-pkg-patch.yaml --output-folder build-dir .
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: conda-pkgs
          path: build-dir/

  release_conda_package:
    name: publish python package to anaconda
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs:
      - test-linux
      - mypy-linux
      - linting-linux
      - build_python_package
      - build_conda_package
    steps:
      - name: "Set up Python 3.12"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: pip cache
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12
      - name: install kiara_plugin.develop
        run: pip install -U git+https://github.com/DHARPA-project/kiara_plugin.develop@develop
      - name: Retrieve build distributions
        uses: actions/download-artifact@v4
        with:
          name: conda-pkgs
          path: build-dir/
      - name: release conda package
        run: kiara build conda publish --user dharpa --channel main --token ${{ secrets.ANACONDA_PUSH_TOKEN }} build-dir


  merge_tag_to_main:
    name: merge current tag to main branch
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    needs:
      - test-linux
      - mypy-linux
      - linting-linux
      - build_conda_package
      - build_python_package
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git config --global user.email "markus@frkl.io"
    - run: git config --global user.name "Markus Binsteiner"
    - name: extract tag name
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: checkout main branch
      run: git checkout main
    - name: merge tag
      run: git merge "${RELEASE_VERSION}"
    - name: push updated main branch
      run: git push https://${{ secrets.GITHUB_TOKEN }}@github.com/DHARPA-Project/kiara.git
