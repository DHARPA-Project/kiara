name: "linux tests and documentation build for 'kiara'"
# This workflow is triggered on pushes to the repository.
on: [push]


jobs:

  commitlint:
    name: lint commit message
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4

  test-linux:
    name: pytest on linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - name: "Set up Python ${{ matrix.python_version }}"
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python_version }}"
      - uses: actions/checkout@v2
      - name: install kiara
        run: pip install -U --pre --extra-index-url https://pypi.fury.io/dharpa/ .[all,dev_testing,modules_core]
      - name: Test with pytest
        run: make test

  coverage:
    name: test coverage
    runs-on: ubuntu-latest
    steps:
      - name: "Set up Python 3.9"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/checkout@v2
      - name: install kiara
        run: pip install -U --pre --extra-index-url https://pypi.fury.io/dharpa/ .[all,dev_testing,modules_core]
      - name: Run coverage
        run: make coverage
      - name: Upload coverage data to coveralls.io
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  mypy-linux:
    name: mypy check on linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.8, 3.9]
    steps:
      - name: "Set up Python ${{ matrix.python_version }}"
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python_version }}"
      - uses: actions/checkout@v2
      - name: install kiara
        run: pip install -U --pre --extra-index-url https://pypi.fury.io/dharpa/ .[all,dev_testing]
      - name: Test with mypy
        run: make mypy

  flake8-linux:
    name: flake8 on linux
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/checkout@v2
      - name: install kiara
        run: pip install -U --pre --extra-index-url https://pypi.fury.io/dharpa/ .[all,dev_testing]
      - name: Test with flake8
        run: make flake

  build-docs:
    name: build documentation
    runs-on: ubuntu-latest
    needs:
      - test-linux
      - mypy-linux
      - flake8-linux
    steps:
      - name: Set up Python 3.9.1
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: install kiara
        run: pip install -U --pre  --extra-index-url https://gitlab.com/api/v4/projects/25344049/packages/pypi/simple --extra-index-url https://pypi.fury.io/dharpa/ .[all,dev_documentation]
      - run: git config --global user.email "markus@frkl.io"
      - run: git config --global user.name "Markus Binsteiner"
      - name: create latest documentation
        if: ${{ ( github.ref == 'refs/heads/develop') }}
        run: FAIL_DOC_BUILD_ON_ERROR=true mike deploy --push latest && mike set-default --push latest
      - name: extract tag name
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: create stable documentation
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: FAIL_DOC_BUILD_ON_ERROR=true mike deploy --push --update-alias --title "v ${RELEASE_VERSION}" "${RELEASE_VERSION}" stable

  publish_package:
    name: publish python package
    runs-on: ubuntu-latest
    needs:
      - test-linux
      - mypy-linux
      - flake8-linux
    env:
        GEMFURY_PUSH_TOKEN: ${{ secrets.GEMFURY_PUSH_TOKEN }}
    steps:
      - name: Set up Python 3.9.1
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: install kiara
        run: pip install -U --extra-index-url https://gitlab.com/api/v4/projects/25344049/packages/pypi/simple --extra-index-url https://pypi.fury.io/dharpa/ -e .[all]
      - name: install 'wheel' package
        run: pip install -U wheel
      - name: create packages
        run: python setup.py sdist bdist_wheel
      - name: upload source package
        if: ${{ ( github.ref == 'refs/heads/develop') || startsWith(github.ref, 'refs/tags') }}
        run: curl -F package=@$(ls dist/kiara-*.tar.gz) https://${GEMFURY_PUSH_TOKEN}@dharpa.fury.land:443/pypi/
      - name: upload wheel
        if: ${{ (github.ref == 'refs/heads/develop') || startsWith(github.ref, 'refs/tags') }}
        run: curl -F package=@$(ls dist/kiara-*.whl) https://${GEMFURY_PUSH_TOKEN}@dharpa.fury.land:443/pypi/
      - name: publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  merge_tag_to_main:
    name: merge current tag to main branch
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    needs:
      - test-linux
      - mypy-linux
      - flake8-linux
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git config --global user.email "markus@frkl.io"
    - run: git config --global user.name "Markus Binsteiner"
    - name: extract tag name
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: checkout main branch
      run: git checkout main
    - name: merge tag
      run: git merge "${RELEASE_VERSION}"
    - name: push updated main branch
      run: git push https://${{ secrets.GITHUB_TOKEN }}@github.com/DHARPA-Project/kiara.git
