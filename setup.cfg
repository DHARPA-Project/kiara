[metadata]
name = kiara
description = A workflow management and execution engine for the DHARPA project.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/DHARPA-Project/kiara
author = Markus Binsteiner
author_email = markus@frkl.io
license = MPL-2.0
license_file = LICENSE
platforms = any
classifiers =
    Development Status :: 3 - Alpha
    License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9

[options]
packages = find_namespace:
install_requires =
    Deprecated>=1.2.0
    alembic>=1.7.0
    appdirs>=1.4.4,<2.0.0
    better-exceptions>=0.3.0
    bidict>=0.21.0
    click>=7.0.0
    deepdiff>=5.2.0,<6.0.0
    distro>=1.6.0
    dpath>=2.0.0
    filetype>=1.0.0,<2.0.0
    jinja2>=3.0.1
    mkdocstrings>=0.17.0
    mmh3>=3.0.0
    networkx>=2.5,<3.0
    orjson>=3.6.0
    pp-ez>=0.2.0
    py-multibase>=1.0.0,<2.0.0
    py-multihash>=2.0.0,<3.0.0
    pydantic[email]>=1.7.0,<2.0.0
    python-dateutil>=2.8.0
    python-slugify>=5.0.0
    pyyaml>=6.0.0
    pyzmq>=22.0.0,<23.0.0
    rich>=9.0.0,<11.0.0
    rich-click>-1.0.0
    ruamel.yaml>=0.17.0,<0.18.0
    sortedcontainers>=2.4.0
    sqlalchemy>=1.4.0
    sqlalchemy-utc>=0.14.0
    sqlalchemy-utils>=0.38.0
    stevedore>=3.3.0,<4.0.0
    structlog>=21.5.0
    toolz>=0.11.0
    tzlocal>=2.1,<3.0
    importlib-metadata>=3.0.0.0;python_version<='3.8'
    pickle5>=0.0.11;python_version<'3.8'
    typing-extensions>=3.0.0.0;python_version<'3.8'
python_requires = >=3.8
include_package_data = True
package_dir =
    =src
setup_requires =
    setuptools-scm
    setuptools-scm-git-archive
zip_safe = False

[options.entry_points]
console_scripts =
    kiara = kiara.interfaces.cli:cli
kiara.archive_type =
    file_system_data_archive = kiara.registries.data.data_store.filesystem_store:FileSystemDataArchive
    file_system_data_store = kiara.registries.data.data_store.filesystem_store:FilesystemDataStore
kiara.data_types =
    none = kiara.data_types.included_core_types:NoneType
    any = kiara.data_types.included_core_types:AnyType
    bytes = kiara.data_types.included_core_types:BytesType
    string = kiara.data_types.included_core_types:StringType
    terminal_renderable = kiara.data_types.included_core_types.internal:TerminalRenderable
    doc = kiara.data_types.included_core_types.internal:DocumentationModelValueType
    file = kiara.data_types.included_core_types.filesystem:FileValueType
    file_bundle = kiara.data_types.included_core_types.filesystem:FileBundleValueType
    internal_model = kiara.data_types.included_core_types.internal:InternalModelValueType
    serialized_value = kiara.data_types.included_core_types.serialization:SerializedValueType
    load_config = kiara.data_types.included_core_types.persistence:LoadConfigValueType
kiara.modules =
    pipeline = kiara.modules.included_core_modules.pipeline:PipelineModule
    value.serialize.pickle = kiara.modules.included_core_modules.serialization:PickleModule
    value.serialize.unpickle = kiara.modules.included_core_modules.serialization:UnpickleModule
    value.save_to.disk.as.pickle = kiara.modules.included_core_modules.persistence:SavePickleToDiskModule
    internal_model.save_to.disk.as.json_file = kiara.modules.included_core_modules.persistence:SaveInternalModelModule
    value.load.pickle_file.from.disk = kiara.modules.included_core_modules.persistence:LoadPickleFromDiskModule
    value.extract_metadata = kiara.modules.included_core_modules.metadata:ExtractMetadataModule
    value.render = kiara.modules.included_core_modules.render_value:ValueTypeRenderModule
    value.render.any = kiara.modules.included_core_modules.render_value:RenderAnyValueModule
    internal_model.load_from.json_file = kiara.modules.included_core_modules.persistence:LoadInternalModelFromDiskModule
kiara.operation_types =
    custom_module = kiara.modules.operations.included_core_operations:CustomModuleOperationType
    pipeline = kiara.modules.operations.included_core_operations.pipeline:PipelineOperationType
    serialize = kiara.modules.operations.included_core_operations.serialize:SerializeOperationType
    persist_value = kiara.modules.operations.included_core_operations.persistence:PersistValueOperationType
    extract_metadata = kiara.modules.operations.included_core_operations.metadata:ExtractMetadataOperationType
    render_value = kiara.modules.operations.included_core_operations.render_value:RenderValueOperationType
kiara.value_metadata =
    python_class = kiara.models.values.value_metadata.included_metadata_types:PythonClassMetadata
    file = kiara.models.values.value_metadata.included_metadata_types:FileMetadata
mkdocs.plugins =
    frkl-docgen = kiara.doc:FrklDocumentationPlugin

[options.extras_require]
cli =
    click>=7.0.0
dev_documentation =
    icecream>=2.1.0
    mike>=1.0.1
    mkdocs-awesome-pages-plugin>=2.5.0
    mkdocs-literate-nav>=0.4.0
    mkdocs-macros-plugin>=0.5.0,<0.6.0
    mkdocs-material>=8.0.0
    mkdocs-section-index>0.3.0
    mkdocstrings-python-legacy
    mknotebooks>=0.7.0
    mkdocs-gen-files>=0.3.1;python_version>='3.7'
dev_modules =
    jupyter
    jupyterlab
    pandas
    pyarrow
dev_testing =
    coveralls>=3.2.0
    flake8>=3.8.4
    jsonschema>=4.0.0
    mypy>=0.800
    pytest>=6.2.2
    pytest-cov>=2.11.1
    pytest-html>=3.1.0
    sqlalchemy-stubs
    tox>=3.21.2
    types-Deprecated
    types-PyYAML
    types-pkg-resources
    types-python-dateutil
    types-python-slugify
    types-tzlocal
dev_utils =
    black
    flake8>=3.8.4
    ipython
    pip-licenses>=3.3.0
    pre-commit>=2.9.3
    setup-cfg-fmt>=1.16.0
    watchgod>=0.6
    wheel
jupyter =
    ipython>=7.0.0,<8.0.0
    jupyterlab
    rise
modules_core =
    kiara-modules.core[all]
modules_language_processing =
    kiara-modules.language-processing[all]
modules_network_analysis =
    kiara-modules.network-analysis[all]
rendering =
    black
    jupytext>=1.11.0
rest_api =
    fastapi>=0.66
    uvicorn>=0.14.0

[options.packages.find]
where = src
exclude =
    tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
universal = 1

[devpi:upload]
no-vcs = 1
formats = sdist, bdist_wheel

[tool:pytest]
addopts =
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[tox:tox]
envlist = py36, py37, py38, flake8

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -e{toxinidir}[dev_testing,all]
install_command = pip install {opts} {packages}
commands =
    pip install -U pip
    py.test --basetemp={envtmpdir}

[testenv:flake8]
basepython = python
deps =
    -e{toxinidir}[dev_testing,all]
    flake8
install_command = pip install {opts} {packages}
commands = flake8 src

[coverage:run]
branch = True
source = kiara
omit =
    src/kiara/doc/*

[coverage:paths]
source =
    src/
    */site-packages/
relative_files = true

[coverage:report]
exclude_lines =
    pragma: no cover
   
    def __repr__
    if self\.debug
   
    raise AssertionError
    raise NotImplementedError
   
    if 0:
    if __name__ == .__main__.:
    if typing.TYPE_CHECKING:
    if kiara is None:

[flake8]
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    .git
    __pycache__
ignore = F405, W503, E501
max-line-length = 88

[isort]
profile = black
indent = '    '
skip = .tox,.venv,build,dist
known_standard_library = setuptools,pkg_resources
known_test = pytest
known_first_party = kiara
sections = FUTURE,STDLIB,COMPAT,TEST,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
combine_as_imports = True
line_length = 88

[mypy]
mypy_path =
    src/
namespace_packages = false
plugins =
    pydantic.mypy, sqlmypy

[mypy-appdirs]
ignore_missing_imports = true

[mypy-asciinet.*]
ignore_missing_imports = true

[mypy-black]
ignore_missing_imports = true

[mypy-click]
ignore_missing_imports = true

[mypy-deepdiff]
ignore_missing_imports = true

[mypy-devtools]
ignore_missing_imports = true

[mypy-distro]
ignore_missing_imports = true

[mypy-dpath.*]
ignore_missing_imports = true

[mypy-fastapi]
ignore_missing_imports = true

[mypy-filetype]
ignore_missing_imports = true

[mypy-kiara_modules.*]
ignore_missing_imports = true

[mypy-kiara_streamlit.*]
ignore_missing_imports = true

[mypy-kiara.doc.mkdocstrings.handler.*]
ignore_missing_imports = true

[mypy-IPython.*]
ignore_missing_imports = true

[mypy-importlib_metadata.*]
ignore_missing_imports = true

[mypy-jupytext]
ignore_missing_imports = true

[mypy-mmh3]
ignore_missing_imports = true

[mypy-pp]
ignore_missing_imports = true

[mypy-mkdocstrings.*]
ignore_missing_imports = true

[mypy-mkdocs.*]
ignore_missing_imports = true

[mypy-mkdocs_gen_files.*]
ignore_missing_imports = true

[mypy-networkx]
ignore_missing_imports = true

[mypy-pyarrow.*]
ignore_missing_imports = true

[mypy-pygraphviz]
ignore_missing_imports = true

[mypy-sqlalchemy_utils.*]
ignore_missing_imports = true

[mypy-rich_click.*]
ignore_missing_imports = true

[mypy-ruamel.*]
ignore_missing_imports = true

[mypy-stevedore]
ignore_missing_imports = true

[mypy-streamlit.*]
ignore_missing_imports = true

[mypy-uvloop]
ignore_missing_imports = true

[mypy-uvicorn]
ignore_missing_imports = true
